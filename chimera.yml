# Arguments that will be appended in-order before command line arguments.
arguments:
  - "-extra-arg"
  - "-I/usr/lib/clang/3.6/include"

template:
  file:
    header:
      content: |
        #include <dartpy/pointers.h>
        #include <dartpy/template_registry.h>
        #include <dart/dart.h>
    postinclude:
      content: '/* postinclude */'
    footer:
      content: '/* footer */'
    # TODO: Put this at the bottom of the module:
    # dart::python::JointTemplateRegistry::register_default_types();
    # dart::python::JointAndNodeTemplateRegistry::register_default_types();
  main:
    header:
      content: |
        #include <vector>
        #include <dartpy/pointers.h>
        #include <dartpy/collections.h>
        #include <dartpy/util.h>
        #include <dart/dart.h>
    postinclude:
      content: '/* main postinclude */'
    precontent:
      content: |
        boost::python::import("boost_numpy_eigen");

        // std::shared_ptr implicit conversions
        boost::python::implicitly_convertible<
          std::shared_ptr<dart::common::LocalResourceRetriever>,
          std::shared_ptr<dart::common::ResourceRetriever>>(); 

        boost::python::implicitly_convertible<
          std::shared_ptr<dart::utils::PackageResourceRetriever>,
          std::shared_ptr<dart::common::ResourceRetriever>>(); 

        // misc implicit conversions
        boost::python::implicitly_convertible<
          std::string, dart::common::Uri>(); 

        // std::vector converters
        dart::python::util::vector_to_python<size_t>();
        dart::python::util::collection_from_python<std::vector<size_t>>();

        dart::python::util::vector_to_python<Eigen::Vector3d>();
        dart::python::util::collection_from_python<
          std::vector<Eigen::Vector3d>>();

        dart::python::util::vector_to_python<Eigen::Vector3i>();
        dart::python::util::collection_from_python<
          std::vector<Eigen::Vector3i>>();

        dart::python::util::vector_to_python<
          dart::dynamics::PointMass::Properties>();
        dart::python::util::collection_from_python<
          std::vector<dart::dynamics::PointMass::Properties>>();

        dart::python::util::vector_to_python<dart::collision::Contact>();
        dart::python::util::collection_from_python<
          std::vector<dart::collision::Contact>>();

        dart::python::util::vector_to_python<dart::dynamics::SkeletonPtr>();
        dart::python::util::collection_from_python<
          std::vector<dart::dynamics::SkeletonPtr>>();

        dart::python::util::vector_to_python<dart::dynamics::ShapePtr>();
        dart::python::util::collection_from_python<
          std::vector<dart::dynamics::ShapePtr>>();

        dart::python::util::vector_to_python<
          dart::dynamics::BodyNode*, dart::dynamics::BodyNodePtr>();
        dart::python::util::collection_from_python<
          std::vector<dart::dynamics::BodyNode*>>();

        dart::python::util::vector_to_python<
          dart::dynamics::SoftBodyNode*, dart::dynamics::SoftBodyNodePtr>();
        dart::python::util::collection_from_python<
          std::vector<dart::dynamics::SoftBodyNode*>>();

        dart::python::util::vector_to_python<
          dart::dynamics::EndEffector*, dart::dynamics::EndEffectorPtr>();
        dart::python::util::collection_from_python<
          std::vector<dart::dynamics::EndEffector*>>();

        dart::python::util::vector_to_python<
          dart::dynamics::DegreeOfFreedom*, dart::dynamics::DegreeOfFreedomPtr>();
        dart::python::util::collection_from_python<
          std::vector<dart::dynamics::DegreeOfFreedom*>>();

    footer:
      content: |
        // main footer

# The C++ namespaces that will be extracted by Chimera
namespaces:
  - dart

# String replacements for various constants used in default arguments.
constants:
  # TODO Bugs:
  '= Eigen::VectorXd()': 'Eigen::VectorXd()'
  #'nullptr': 'nullptr' # This breaks Boost.Python.

  # String literals:
  '""': '""'
  '"Branch"': '"Branch"'
  '"Chain"': '"Chain"'
  '"EndEffector"': '"EndEffector"'
  '"Group"': '"Group"'
  '"Linkage"': '"Linkage"'
  '"Noname Timer"': '"Noname Timer"'
  '"Skeleton"': '"Skeleton"'
  '"simple_frame"': '"simple_frame"'
  '"temporary"': '"temporary"'
  '"null_function"': '"null_function"'
  '"modular_function"': '"modular_function"'
  '"function"': '"function"'
  '"Joint"': '"Joint"'
  '"world"': '"world"'

  # Eigen:
  'Eigen::Matrix3d::Identity()': 'Eigen::Matrix3d(Eigen::Matrix3d::Identity())'
  'Eigen::Vector3d::Zero()': 'Eigen::Vector3d(Eigen::Vector3d::Zero())'
  'Eigen::Vector4d::Ones()': 'Eigen::Vector4d(Eigen::Vector4d::Ones())'
  'Eigen::Isometry3d::Identity()': 'Eigen::Isometry3d(Eigen::Isometry3d::Identity())'
  'Eigen::Vector4d(0.5,0.5,1.0,1.0)': 'Eigen::Vector4d(0.5,0.5,1.0,1.0)'
  'Eigen::Vector3d(0.0, 0.0, -9.81)': 'Eigen::Vector3d(0.0, 0.0, -9.81)'
  'Eigen::Vector3d::Constant(-DART_DBL_INF)': 'Eigen::Vector3d(Eigen::Vector3d::Constant(-DART_DBL_INF))'
  'Eigen::Vector3d::Constant( DART_DBL_INF)': 'Eigen::Vector3d(Eigen::Vector3d::Constant( DART_DBL_INF))'
  'Eigen::Vector3d::UnitX()': 'Eigen::Vector3d(Eigen::Vector3d::UnitX())'
  'Eigen::Vector3d::UnitY()': 'Eigen::Vector3d(Eigen::Vector3d::UnitY())'
  'Eigen::Vector3d::UnitZ()': 'Eigen::Vector3d(Eigen::Vector3d::UnitZ())'
  'Eigen::Vector3d::Constant(0.05)': 'Eigen::Vector3d(Eigen::Vector3d::Constant(0.05))'
  'Eigen::VectorXd()': 'Eigen::VectorXd()'
  'Eigen::Vector3d::Constant(-DefaultIKTolerance)': 'Eigen::Vector3d(Eigen::Vector3d::Constant(-dart::dynamics::DefaultIKTolerance))'
  'Eigen::Vector3d::Constant( DefaultIKTolerance)': 'Eigen::Vector3d(Eigen::Vector3d::Constant(dart::dynamics::DefaultIKTolerance))'
  'Eigen::Vector6d::Constant(-DefaultIKTolerance)': 'Eigen::Vector6d(Eigen::Vector6d::Constant(-dart::dynamics::DefaultIKTolerance))'
  'Eigen::Vector6d::Constant( DefaultIKTolerance)': 'Eigen::Vector6d(Eigen::Vector6d::Constant(dart::dynamics::DefaultIKTolerance))'
  'Eigen::Vector3d::Constant(DefaultIKLinearWeight)': 'Eigen::Vector3d(Eigen::Vector3d::Constant(dart::dynamics::DefaultIKLinearWeight))'
  'Eigen::Vector3d::Constant(DefaultIKAngularWeight)': 'Eigen::Vector3d(Eigen::Vector3d::Constant(dart::dynamics::DefaultIKAngularWeight))'

  # Other:
  'cout': 'std::cout'
  '&cout': 'std::cout'
  'Frame::World()': 'dart::dynamics::Frame::World()'
  'std::vector<BodyNode*>()': 'std::vector<dart::dynamics::BodyNode*>()'
  'std::vector<ShapePtr>()': 'std::vector<dart::dynamics::ShapePtr>()'
  'std::vector<std::string>()': 'std::vector<std::string>()'
  'Color::White(1.0)': 'dart::Color::White(1.0)'
  'DefaultActuatorType': 'dart::dynamics::Joint::DefaultActuatorType'
  'Inertia()': 'dart::dynamics::Inertia()'
  'std::vector<size_t>()': 'std::vector<size_t>()'
  'std::vector<PointMass::Properties>()': 'std::vector<dart::dynamics::PointMass::Properties>()'
  'std::vector<Eigen::Vector3i>()': 'std::vector<Eigen::Vector3i>()'
  'Solver::Properties()': 'dart::optimizer::Solver::Properties()'
  'ErrorMethod::Properties()': 'dart::dynamics::InverseKinematics::ErrorMethod::Properties()'
  'GradientMethod::Properties()': 'dart::dynamics::InverseKinematics::GradientMethod::Properties()'
  'Entity::Properties()': 'dart::dynamics::Entity::Properties()'
  'Entity::Properties("BodyNode")': 'dart::dynamics::Entity::Properties("BodyNode")'
  'common::AddonManager::State()': 'dart::common::AddonManager::State()'
  'common::AddonManager::Properties()': 'dart::common::AddonManager::Properties()'
  'MultiDofJoint<2>::Properties()': 'dart::dynamics::MultiDofJoint<2>::Properties()'
  'MultiDofJoint<3>::Properties()': 'dart::dynamics::MultiDofJoint<3>::Properties()'
  'MultiDofJoint<6>::Properties()': 'dart::dynamics::MultiDofJoint<6>::Properties()'
  'EulerJointUniqueProperties()': 'dart::dynamics::EulerJoint::UniqueProperties()'
  'Joint::Properties()': 'dart::dynamics::Joint::Properties()'
  'SingleDofJointUniqueProperties()': 'dart::dynamics::SingleDofJoint::UniqueProperties()'
  'SingleDofJointProperties()': 'dart::dynamics::SingleDofJoint::Properties()'
  'SingleDofJoint::Properties()': 'dart::dynamics::SingleDofJoint::Properties()'
  'ScrewJointUniqueProperties()': 'dart::dynamics::ScrewJoint::UniqueProperties()'
  'UniversalJointUniqueProperties()': 'dart::dynamics::UniversalJoint::UniqueProperties()'
  'PlanarJointUniqueProperties()': 'dart::dynamics::PlanarJoint::UniqueProperties()'
  'SoftBodyNode::UniqueProperties()': 'dart::dynamics::SoftBodyNode::UniqueProperties()'
  'BodyNode::Properties()': 'dart::dynamics::BodyNode::Properties()'
  'RevoluteJointUniqueProperties()': 'dart::dynamics::RevoluteJoint::UniqueProperties()'
  'PrismaticJointUniqueProperties()': 'dart::dynamics::PrismaticJoint::UniqueProperties()'

  # Ambiguous TODOs:
  # Warning: Unable to evaluate non-trivial call 'Properties()' in default value for parameter '_properties' of method 'dart::dynamics::ArrowShape::ArrowShape'.
  # Warning: Unable to evaluate non-trivial call 'Solver::Properties()' in default value for parameter '_solverProperties' of method 'dart::optimizer::GradientDescentSolver::Properties::Properties'.
  #

# Selected types that need special handling.
types:
  'const double &':
    return_value_policy: boost::python::copy_const_reference
  'const std::string&':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::Vector3i &':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::Vector2d&':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::Vector3d&':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::Vector4d&':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::Vector6d &':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::VectorXd &':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::Isometry3d &':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::Matrix6d &':
    return_value_policy: boost::python::copy_const_reference
  'const Eigen::MatrixXd &':
    return_value_policy: boost::python::copy_const_reference
  'Eigen::VectorXd &':
    return_value_policy: boost::python::copy_non_const_reference
  'std::vector<Eigen::VectorXd> &':
    return_value_policy: boost::python::copy_non_const_reference
  'const Eigen::aligned_vector<Eigen::Vector2i> &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::math::Jacobian &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::dynamics::Inertia &': 
    return_value_policy: boost::python::copy_const_reference
  'const dart::dynamics::Entity::Properties &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::dynamics::Skeleton::Properties &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::dynamics::ArrowShape::Properties &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::dynamics::Joint::Properties &':
    return_value_policy: boost::python::copy_const_reference
  'const std::shared_ptr<dart::dynamics::InverseKinematics> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::shared_ptr<dart::optimizer::Function> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::shared_ptr<dart::optimizer::Problem> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::shared_ptr<dart::optimizer::Solver> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::shared_ptr<dart::dynamics::WholeBodyIK> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::vector<Eigen::MatrixXd> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::vector<dart::dynamics::InverseKinematics::Analytical::Solution> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::pair<Eigen::Vector6d, Eigen::Vector6d> &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::math::BoundingBox &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::math::SupportPolygon &':
    return_value_policy: boost::python::copy_const_reference
  'const dart::optimizer::Solver::Properties &':
    return_value_policy: boost::python::copy_const_reference


  # smart pointers
  'dart::dynamics::BodyNode *':
    return_value_policy: boost::python::return_by_smart_ptr<dart::dynamics::BodyNodePtr>
  'dart::dynamics::SoftBodyNode *':
    return_value_policy: boost::python::return_by_smart_ptr<dart::dynamics::SoftBodyNodePtr>
  'dart::dynamics::DegreeOfFreedom *':
    return_value_policy: boost::python::return_by_smart_ptr<dart::dynamics::DegreeOfFreedomPtr>
  'dart::dynamics::Joint *':
    return_value_policy: boost::python::return_by_smart_ptr<dart::dynamics::JointPtr>
  'dart::dynamics::EulerJoint *': null # TODO
  'dart::dynamics::EndEffector *':
    return_value_policy: boost::python::return_by_smart_ptr<dart::dynamics::EndEffectorPtr>
  'dart::dynamics::Node *':
    return_value_policy: boost::python::return_by_smart_ptr<dart::dynamics::NodePtr>

  # collections
  'const std::vector<dart::dynamics::BodyNode*>&':
    return_value_policy: boost::python::copy_const_reference
  'const std::vector<dart::dynamics::DegreeOfFreedom*>&':
    return_value_policy: boost::python::copy_const_reference
  'const std::vector<std::size_t> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::vector<dart::dynamics::ShapePtr> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::set<dart::dynamics::Entity *> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::set<dart::dynamics::Frame *> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::pair<Eigen::Vector3d, Eigen::Vector3d> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::vector<int> &':
    return_value_policy: boost::python::copy_const_reference
  'const std::vector<Eigen::Vector3d> &':
    return_value_policy: boost::python::copy_const_reference

  # allow unsafe access
  # TODO: Are there smart pointers for these?
  'dart::dynamics::PointMass *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::Support *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::Frame *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::Marker *':
    return_value_policy: boost::python::reference_existing_object
  'dart::collision::CollisionNode *':
    return_value_policy: boost::python::reference_existing_object
  'dart::collision::FCLCollisionNode *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::InverseKinematics *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::JacobianNode *':
    return_value_policy: boost::python::reference_existing_object
  'dart::collision::Contact &':
    return_value_policy: boost::python::reference_existing_object
  'fcl::CollisionObject *':
    return_value_policy: boost::python::reference_existing_object
  'dart::planning::PathSegment *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::InverseKinematics::ErrorMethod &':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::InverseKinematics::GradientMethod &':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::PointMassNotifier *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::SingleDofJoint::Addon *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::MultiDofJoint<2>::Addon *':
    return_value_policy: boost::python::reference_existing_object
  'dart::dynamics::InverseKinematics::Analytical *':
    return_value_policy: boost::python::reference_existing_object
  'dart::common::UriComponent::reference_type':
    return_value_policy: boost::python::reference_existing_object

  # TODO: temporarily disabled
  'std::mutex &': null
  'const aiScene *': null
  'const aiMesh *': null

  # suppressed to disable const overloads
  'const dart::dynamics::EndEffector *': null
  'const dart::dynamics::Support *': null
  'dart::dynamics::ConstSkeletonPtr': null
  'std::vector<const dart::dynamics::BodyNode *>': null
  'const std::vector<dart::dynamics::ConstShapePtr> &': null
  'const std::vector<const dart::dynamics::DegreeOfFreedom *> &': null
  'const std::vector<const dart::dynamics::BodyNode *> &': null
  'const dart::dynamics::SoftBodyNode *': null
  'std::ostream *': null

# Selected function and class declarations that need custom parameters.
declarations:
  'dart::common::AddonManager':
    noncopyable: true
  'dart::common::ResourceRetriever':
    held_type: std::shared_ptr<dart::common::ResourceRetriever>
  'dart::common::LocalResourceRetriever':
    held_type: std::shared_ptr<dart::common::LocalResourceRetriever>
  'dart::utils::PackageResourceRetriever':
    held_type: std::shared_ptr<dart::utils::PackageResourceRetriever>
  'dart::dynamics::InverseKinematics':
    held_type: 'std::shared_ptr<dart::dynamics::InverseKinematics>'

    # Frames
  'dart::dynamics::Frame':
    held_type: 'dart::dynamics::Frame *'
  'dart::dynamics::SimpleFrame':
    held_type: 'std::shared_ptr<dart::dynamics::SimpleFrame>'

  # Joints
  # TODO: What should the HeldType be for derived Joint classes? They cannot be
  # TemplateJointPtr<Derived, BodyNode> because the the type of the Joint
  # stored in a TemplateJointPtr may change at runtime. They also should not be
  # Joint* because of potential memory leaks.
  'dart::dynamics::Joint':
    held_type: 'dart::dynamics::JointPtr'
  'dart::dynamics::ZeroDofJoint':
    name: ZeroDofJoint
  'dart::dynamics::MultiDofJoint<2>':
    name: TwoDofJoint
  'dart::dynamics::MultiDofJoint<3>':
    name: ThreeDofJoint
  'dart::dynamics::MultiDofJoint<6>':
    name: SixDofJoint

  # DegreeOfFreedoms
  'dart::dynamics::DegreeOfFreedom':
    held_type: 'dart::dynamics::DegreeOfFreedomPtr'

  # Nodes
  'dart::dynamics::JacobianNode':
    held_type: 'dart::dynamics::TemplateNodePtr<dart::dynamics::JacobianNode, dart::dynamics::BodyNode>'
  'dart::dynamics::BodyNode':
    held_type: 'dart::dynamics::BodyNodePtr'
  'dart::dynamics::SoftBodyNode':
    held_type: 'dart::dynamics::SoftBodyNodePtr'
  'dart::dynamics::EndEffector':
    held_type: 'dart::dynamics::TemplateNodePtr<dart::dynamics::EndEffector, dart::dynamics::BodyNode>'
  'dart::dynamics::TemplatedJacobianNode<dart::dynamics::EndEffector>':
    name: TemplatedJacobianEndEffector
    held_type: 'dart::dynamics::TemplateNodePtr<dart::dynamics::TemplatedJacobianNode<dart::dynamics::EndEffector>, dart::dynamics::BodyNode>'
  'dart::dynamics::TemplatedJacobianNode<dart::dynamics::BodyNode>':
    name: TemplatedJacobianBodyNode
    held_type: 'dart::dynamics::TemplateNodePtr<dart::dynamics::TemplatedJacobianNode<dart::dynamics::BodyNode>, dart::dynamics::BodyNode>'

  # Shapes
  'dart::dynamics::Shape':
    held_type: 'std::shared_ptr<dart::dynamics::Shape>'
  'dart::dynamics::BoxShape':
    held_type: 'std::shared_ptr<dart::dynamics::BoxShape>'
  'dart::dynamics::CylinderShape':
    held_type: 'std::shared_ptr<dart::dynamics::CylinderShape>'
  'dart::dynamics::EllipsoidShape':
    held_type: 'std::shared_ptr<dart::dynamics::EllipsoidShape>'
  'dart::dynamics::LineSegmentShape':
    held_type: 'std::shared_ptr<dart::dynamics::LineSegmentShape>'
  'dart::dynamics::MeshShape':
    held_type: 'std::shared_ptr<dart::dynamics::MeshShape>'
  'dart::dynamics::ArrowShape':
    held_type: 'std::shared_ptr<dart::dynamics::ArrowShape>'
  'dart::dynamics::PlaneShape':
    held_type: 'std::shared_ptr<dart::dynamics::PlaneShape>'
  'dart::dynamics::SoftMeshShape':
    held_type: 'std::shared_ptr<dart::dynamics::SoftMeshShape>'

  # MetaSkeletons
  'dart::dynamics::Skeleton':
    held_type: 'dart::dynamics::SkeletonPtr'
  'dart::dynamics::MetaSkeleton':
    held_type: 'dart::dynamics::MetaSkeletonPtr'
  'dart::dynamics::Branch':
    held_type: 'dart::dynamics::BranchPtr'
  'dart::dynamics::Chain':
    held_type: 'dart::dynamics::ChainPtr'
  'dart::dynamics::Branch':
    held_type: 'dart::dynamics::BranchPtr'
  'dart::dynamics::Group':
    held_type: 'dart::dynamics::GroupPtr'
  'dart::dynamics::Linkage':
    held_type: 'dart::dynamics::LinkagePtr'


   # TODO: Unknown.
  'dart::dynamics::WholeBodyIK':
    held_type: 'dart::dynamics::WholeBodyIK *'
  'dart::dynamics::TemplatedJacobianNode<dart::dynamics::EndEffector>':
    held_type: 'dart::dynamics::TemplatedJacobianNode<dart::dynamics::EndEffector> *'
  'dart::dynamics::TemplatedJacobianNode<dart::dynamics::BodyNode>':
    held_type: 'dart::dynamics::TemplatedJacobianNode<dart::dynamics::BodyNode> *'
  'dart::dynamics::SkeletonRefCountingBase':
    held_type: 'dart::dynamics::SkeletonRefCountingBase *'
  'dart::dynamics::MutexedWeakSkeletonPtr': null
  'dart::dynamics::TemplateWeakBodyNodePtr<dart::dynamics::BodyNode>': null

  # Extensible<T> names
  'dart::common::Extensible<dart::common::Addon::Properties>':
    name: ExtensibleAddonProperties
  'dart::common::Extensible<dart::common::Addon::State>':
    name: ExtensibleAddonState
  'dart::common::Extensible<dart::dynamics::Node::Properties>':
    name: ExtensibleNodeProperties
  'dart::common::Extensible<dart::dynamics::Node::State>':
    name: ExtensibleNodeState

  # SpecializedAddonManager<T> names
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::EulerJointAddon>':
    name: SpecializedAddonManagerEulerJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::ScrewJointAddon>':
    name: SpecializedAddonManagerScrewJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::PlanarJointAddon>':
    name: SpecializedAddonManagerPlanarJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::MultiDofJointAddon<2ul>>':
    name: SpecializedAddonManagerTwoDofJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::MultiDofJointAddon<3ul>>':
    name: SpecializedAddonManagerThreeDofJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::MultiDofJointAddon<6ul>>':
    name: SpecializedAddonManagerSixDofJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::RevoluteJointAddon>':
    name: SpecializedAddonManagerRevoluteJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::PrismaticJointAddon>':
    name: SpecializedAddonManagerPrismaticJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::detail::UniversalJointAddon>':
    name: SpecializedAddonManagerUniversalJointAddon
  'dart::common::SpecializedAddonManager<dart::dynamics::Support>':
    name: SpecializedAddonManagerSupportJointAddon

  # NameManager<T> names
  'dart::common::NameManager<dart::dynamics::EndEffector*>':
    name: NameManagerEndEffector
  'dart::common::NameManager<dart::dynamics::SoftBodyNode*>':
    name: NameManagerSoftBodyNode
  'dart::common::NameManager<dart::dynamics::DegreeOfFreedom*>':
    name: NameManagerDegreeOfFreedom
  'dart::common::NameManager<dart::dynamics::Node*>':
    name: NameManagerNode
  'dart::common::NameManager<dart::dynamics::Joint*>':
    name: NameManagerJoint
  'dart::common::NameManager<dart::dynamics::Marker*>':
    name: NameManagerMarker 
  'dart::common::NameManager<dart::dynamics::BodyNode*>':
    name: NameManagerBodyNode
  'dart::common::NameManager<std::shared_ptr<dart::dynamics::SimpleFrame>>':
    name: NameManagerSimpleFrame
  'dart::common::NameManager<std::shared_ptr<dart::dynamics::Skeleton>>':
    name: NameManagerSkeleton

  # Suppressed because of bugs in DART:
  #'template <> void dart::common::NameManager<dart::dynamics::Marker *>::removeEntries(const std::string&, dart::dynamics::Marker *const &)': null
  #'template <> void dart::common::NameManager<dart::dynamics::BodyNode *>::removeEntries(const std::string&, dart::dynamics::BodyNode *const &)': null
  #'template <> void dart::common::NameManager<dart::dynamics::SoftBodyNode *>::removeEntries(const std::string&, dart::dynamics::SoftBodyNode *const &)': null
  #'template <> void dart::common::NameManager<dart::dynamics::EndEffector *>::removeEntries(const std::string&, dart::dynamics::EndEffector *const &)': null
  #'template <> void dart::common::NameManager<dart::dynamics::DegreeOfFreedom*>::removeEntries(const std::string&, dart::dynamics::DegreeOfFreedom *const &)': null
  #'template <> void dart::common::NameManager<std::shared_ptr<dart::dynamics::SimpleFrame>>::removeEntries(const std::string&, std::shared_ptr<dart::dynamics::SimpleFrame> const &)': null
  #'template <> void dart::common::NameManager<std::shared_ptr<dart::dynamics::Skeleton> >::removeEntries(const std::string&, std::shared_ptr<dart::dynamics::Skeleton> const &)': null

  'dart::dynamics::SpecializedNodeManagerForBodyNode<dart::dynamics::EndEffector>':
    name: SpecializedEndEffectorNodeManagerForBodyNode
  'dart::dynamics::SpecializedNodeManagerForSkeleton<dart::dynamics::EndEffector>':
    name: SpecializedEndEffectorNodeManagerForSkeleton

  'dart::dynamics::detail::MultiDofJointProperties<2ul>':
    name: TwoDofJointProperties
  'dart::dynamics::detail::MultiDofJointProperties<3ul>':
    name: ThreeDofJointProperties
  'dart::dynamics::detail::MultiDofJointProperties<6ul>':
    name: SixDofJointProperties
  'dart::dynamics::detail::MultiDofJointUniqueProperties<2ul>':
    name: TwoDofJointUniqueProperties
  'dart::dynamics::detail::MultiDofJointUniqueProperties<3ul>':
    name: ThreeDofJointUniqueProperties
  'dart::dynamics::detail::MultiDofJointUniqueProperties<6ul>':
    name: SixDofJointUniqueProperties

  'dart::dynamics::AccessoryNode<dart::dynamics::EndEffector>':
    name: EndEffectorAccessoryNode

  # Suppressed because they're useless in Python.
  'dart::common::sub_ptr<dart::dynamics::JacobianNode>': null
  'dart::common::sub_ptr<dart::dynamics::InverseKinematics>': null
  'const tinyxml2::XMLElement *dart::utils::getElement(const tinyxml2::XMLElement *, const std::string &)': null
  'tinyxml2::XMLElement *dart::utils::getElement(tinyxml2::XMLElement *, const std::string &)': null
  'std::ostream &dart::common::colorMsg(const std::string &, int)': null
  'std::ostream &dart::common::colorErr(const std::string &, const std::string &, unsigned int, int)': null

  # Suppressed because these are optional components.
  'Assimp::IOStream': null
  'dart::dynamics::AssimpInputResourceAdaptor': null
  'dart::optimizer::IpoptSolver': null
  'dart::optimizer::NloptSolver': null
  'dart::optimizer::DartTNLP': null

  'dart::dynamics::Frame *dart::dynamics::Frame::World()':
    return_value_policy: boost::python::reference_existing_object
  'dart::gui::GlutWindow': null
  #'const std::vector<ConstShapePtr>& dart::dynamics::Entity::getVisualizationShapes() const': null
  'const dart::dynamics::Frame* dart::dynamics::Entity::getParentFrame() const': null
  'const dart::dynamics::DegreeOfFreedom* dart::dynamics::JacobianNode::getDependentDof(size_t) const': null
  #'const std::vector<const DegreeOfFreedom *>& dart::dynamics::JacobianNode::getDependentDofs() const': null
  'const dart::dynamics::InverseKinematics::ErrorMethod& dart::dynamics::InverseKinematics::getErrorMethod() const': null
  'const dart::dynamics::InverseKinematics::GradientMethod &dart::dynamics::InverseKinematics::getGradientMethod() const': null
  'const dart::dynamics::JacobianNode *dart::dynamics::InverseKinematics::getNode() const': null
  'const dart::dynamics::JacobianNode *dart::dynamics::InverseKinematics::getAffiliation() const': null
  'std::shared_ptr<const dart::dynamics::SimpleFrame> dart::dynamics::InverseKinematics::getTarget() const': null
  'std::vector<const dart::dynamics::DegreeOfFreedom*> dart::dynamics::MetaSkeleton::getDofs() const': null
  'const dart::dynamics::BodyNode *dart::dynamics::MetaSkeleton::getBodyNode(size_t) const': null
  #'const std::vector<const BodyNode *> &dart::dynamics::MetaSkeleton::getBodyNodes() const': null
  'const dart::dynamics::Joint *dart::dynamics::MetaSkeleton::getJoint(size_t) const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::MetaSkeleton::getDof(size_t) const': null
  'const dart::dynamics::BodyNode *dart::dynamics::Skeleton::getRootBodyNode(size_t) const': null
  'const dart::dynamics::BodyNode *dart::dynamics::Skeleton::getBodyNode(size_t) const': null
  'const dart::dynamics::SoftBodyNode *dart::dynamics::Skeleton::getSoftBodyNode(size_t) const': null
  'const dart::dynamics::BodyNode *dart::dynamics::Skeleton::getBodyNode(const std::string &) const': null
  'const dart::dynamics::SoftBodyNode *dart::dynamics::Skeleton::getSoftBodyNode(const std::string &) const': null
  #'const std::vector<const BodyNode *> &dart::dynamics::Skeleton::getBodyNodes() const': null
  'std::vector<const dart::dynamics::DegreeOfFreedom*> dart::dynamics::Skeleton::getDofs() const': null
  'const dart::dynamics::Joint *dart::dynamics::Skeleton::getJoint(size_t) const': null
  'const dart::dynamics::Joint *dart::dynamics::Skeleton::getJoint(const std::string &) const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::Skeleton::getDof(size_t) const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::Skeleton::getDof(const std::string &) const': null
  #'const std::vector<const DegreeOfFreedom *> &dart::dynamics::Skeleton::getTreeDofs(size_t) const': null
  'const dart::dynamics::EndEffector *dart::dynamics::Skeleton::getEndEffector(size_t) const': null
  'const dart::dynamics::EndEffector *dart::dynamics::Skeleton::getEndEffector(const std::string &) const': null
  'const dart::dynamics::Marker *dart::dynamics::Skeleton::getMarker(const std::string &) const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::EndEffector::getDependentDof(size_t) const': null
  #'const std::vector<const DegreeOfFreedom *> &dart::dynamics::EndEffector::getDependentDofs() const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::ZeroDofJoint::getDof(size_t) const': null
  'const dart::dynamics::PointMass *dart::dynamics::SoftBodyNode::getPointMass(size_t) const': null
  'const dart::dynamics::PointMassNotifier *dart::dynamics::SoftBodyNode::getNotifier() const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::SingleDofJoint::getDof(size_t) const': null
  'const dart::dynamics::SoftBodyNode *dart::dynamics::PointMass::getParentSoftBodyNode() const': null
  'const dart::dynamics::PointMass *dart::dynamics::PointMass::getConnectedPointMass(size_t) const': null

  'std::vector<const dart::dynamics::DegreeOfFreedom*> dart::dynamics::ReferentialSkeleton::getDofs() const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::ReferentialSkeleton::getDof(size_t) const': null
  'const dart::dynamics::Joint *dart::dynamics::ReferentialSkeleton::getJoint(size_t) const': null
  #'const std::vector<const BodyNode *> &dart::dynamics::ReferentialSkeleton::getBodyNodes() const': null
  'const dart::dynamics::BodyNode *dart::dynamics::ReferentialSkeleton::getBodyNode(size_t) const': null
  'const dart::dynamics::BodyNode *dart::dynamics::DegreeOfFreedom::getParentBodyNode() const': null
  'const dart::dynamics::BodyNode *dart::dynamics::DegreeOfFreedom::getParentBodyNode() const': null
  'const dart::dynamics::BodyNode *dart::dynamics::DegreeOfFreedom::getChildBodyNode() const': null
  'const dart::dynamics::Joint *dart::dynamics::DegreeOfFreedom::getJoint() const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::Joint::getDof(size_t) const': null
  'dart::dynamics::DegreeOfFreedom *dart::dynamics::Joint::getDof(size_t)': null
  'const dart::dynamics::BodyNode *dart::dynamics::Joint::getParentBodyNode() const': null
  'const dart::dynamics::BodyNode *dart::dynamics::Joint::getChildBodyNode() const': null
  #'const std::vector<const DegreeOfFreedom *> &dart::dynamics::BodyNode::getDependentDofs() const': null
  'const dart::dynamics::DegreeOfFreedom *dart::dynamics::BodyNode::getDependentDof(size_t) const': null
  'dart::dynamics::ConstSkeletonPtr dart::dynamics::BodyNode::getSkeleton() const': null
  'const dart::dynamics::Marker *dart::dynamics::BodyNode::getMarker(size_t) const': null
  'const dart::dynamics::Joint *dart::dynamics::BodyNode::getChildJoint(size_t) const': null
  'const dart::dynamics::BodyNode *dart::dynamics::BodyNode::getChildBodyNode(size_t) const': null
  'const dart::dynamics::BodyNode *dart::dynamics::BodyNode::getParentBodyNode() const': null
  'const dart::dynamics::Joint *dart::dynamics::BodyNode::getParentJoint() const': null
  'dart::dynamics::ConstShapePtr dart::dynamics::BodyNode::getCollisionShape(size_t) const': null
  'const dart::dynamics::BodyNode *dart::dynamics::Marker::getBodyNode() const': null
  'const dart::dynamics::SoftBodyNode *dart::dynamics::PointMass::getParentSoftBodyNode() const': null
  'template<> const dart::dynamics::DegreeOfFreedom *dart::dynamics::MultiDofJoint<2>::getDof(size_t) const': null
  'template<> const dart::dynamics::DegreeOfFreedom *dart::dynamics::MultiDofJoint<3>::getDof(size_t) const': null
  'template<> const dart::dynamics::DegreeOfFreedom *dart::dynamics::MultiDofJoint<6>::getDof(size_t) const': null
  'dart::dynamics::AssimpInputResourceRetrieverAdaptor': null
  #'const dart::dynamics::DegreeOfFreedom *dart::dynamics::MultiDofJoint::getDof(size_t) const': null
