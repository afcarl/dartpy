#include <dartpy/pointers.h>
#include <dartpy/template_registry.h>
#include <dart/dart.h>


#include <boost/python.hpp>
#include <cmath>

namespace {



} // namespace

void _ZN4dart8dynamics6detail18MultiDofJointAddonILm2EEE()
{
::boost::python::object parent_object(::boost::python::scope().attr("dynamics").attr("detail"));
::boost::python::scope parent_scope(parent_object);

::boost::python::class_<dart::dynamics::detail::MultiDofJointAddon<2>, ::boost::noncopyable, ::boost::python::bases<dart::common::detail::AddonWithVersionedProperties<dart::common::ManagerTrackingAddon<dart::dynamics::MultiDofJoint<2> >, dart::dynamics::detail::MultiDofJointAddon<2>, dart::dynamics::detail::MultiDofJointUniqueProperties<2>, dart::dynamics::MultiDofJoint<2>, &dart::common::detail::NoOp> > >("ThreeDofJointAddon", boost::python::no_init)
.def("__init__", ::boost::python::make_constructor([](dart::common::AddonManager * mgr) -> dart::dynamics::detail::MultiDofJointAddon<2> * { return new dart::dynamics::detail::MultiDofJointAddon<2>(mgr); }, ::boost::python::default_call_policies(), (::boost::python::arg("mgr"))))
.def("__init__", ::boost::python::make_constructor([](dart::common::AddonManager * mgr, const dart::dynamics::detail::MultiDofJointAddon<2>::PropertiesData & properties) -> dart::dynamics::detail::MultiDofJointAddon<2> * { return new dart::dynamics::detail::MultiDofJointAddon<2>(mgr, properties); }, ::boost::python::default_call_policies(), (::boost::python::arg("mgr"), ::boost::python::arg("properties"))))
.def("setPositionLowerLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setPositionLowerLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setPositionLowerLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setPositionLowerLimits(vec); }, (::boost::python::arg("vec")))
.def("getPositionLowerLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getPositionLowerLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getPositionLowerLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getPositionLowerLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setPositionUpperLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setPositionUpperLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setPositionUpperLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setPositionUpperLimits(vec); }, (::boost::python::arg("vec")))
.def("getPositionUpperLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getPositionUpperLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getPositionUpperLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getPositionUpperLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setInitialPosition", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setInitialPosition(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setInitialPositions", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setInitialPositions(vec); }, (::boost::python::arg("vec")))
.def("getInitialPosition", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getInitialPosition(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getInitialPositions", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getInitialPositions(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setVelocityLowerLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setVelocityLowerLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setVelocityLowerLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setVelocityLowerLimits(vec); }, (::boost::python::arg("vec")))
.def("getVelocityLowerLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getVelocityLowerLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getVelocityLowerLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getVelocityLowerLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setVelocityUpperLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setVelocityUpperLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setVelocityUpperLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setVelocityUpperLimits(vec); }, (::boost::python::arg("vec")))
.def("getVelocityUpperLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getVelocityUpperLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getVelocityUpperLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getVelocityUpperLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setInitialVelocity", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setInitialVelocity(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setInitialVelocities", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setInitialVelocities(vec); }, (::boost::python::arg("vec")))
.def("getInitialVelocity", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getInitialVelocity(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getInitialVelocities", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getInitialVelocities(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setAccelerationLowerLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setAccelerationLowerLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setAccelerationLowerLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setAccelerationLowerLimits(vec); }, (::boost::python::arg("vec")))
.def("getAccelerationLowerLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getAccelerationLowerLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getAccelerationLowerLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getAccelerationLowerLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setAccelerationUpperLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setAccelerationUpperLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setAccelerationUpperLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setAccelerationUpperLimits(vec); }, (::boost::python::arg("vec")))
.def("getAccelerationUpperLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getAccelerationUpperLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getAccelerationUpperLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getAccelerationUpperLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setForceLowerLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setForceLowerLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setForceLowerLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setForceLowerLimits(vec); }, (::boost::python::arg("vec")))
.def("getForceLowerLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getForceLowerLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getForceLowerLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getForceLowerLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setForceUpperLimit", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setForceUpperLimit(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setForceUpperLimits", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setForceUpperLimits(vec); }, (::boost::python::arg("vec")))
.def("getForceUpperLimit", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getForceUpperLimit(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getForceUpperLimits", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getForceUpperLimits(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setSpringStiffness", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setSpringStiffness(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setSpringStiffnesses", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setSpringStiffnesses(vec); }, (::boost::python::arg("vec")))
.def("getSpringStiffness", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getSpringStiffness(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getSpringStiffnesses", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getSpringStiffnesses(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setRestPosition", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setRestPosition(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setRestPositions", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setRestPositions(vec); }, (::boost::python::arg("vec")))
.def("getRestPosition", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getRestPosition(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getRestPositions", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getRestPositions(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setDampingCoefficient", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setDampingCoefficient(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setDampingCoefficients", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setDampingCoefficients(vec); }, (::boost::python::arg("vec")))
.def("getDampingCoefficient", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getDampingCoefficient(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getDampingCoefficients", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getDampingCoefficients(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setFriction", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const double & value) -> void { return self->setFriction(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setFrictions", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & vec) -> void { return self->setFrictions(vec); }, (::boost::python::arg("vec")))
.def("getFriction", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const double & { return self->getFriction(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getFrictions", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::Vector & { return self->getFrictions(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setPreserveDofName", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const bool & value) -> void { return self->setPreserveDofName(index, value); }, (::boost::python::arg("index"), ::boost::python::arg("value")))
.def("setPreserveDofNames", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, const dart::dynamics::detail::MultiDofJointAddon<2>::BoolArray & vec) -> void { return self->setPreserveDofNames(vec); }, (::boost::python::arg("vec")))
.def("getPreserveDofName", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const bool & { return self->getPreserveDofName(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getPreserveDofNames", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::BoolArray & { return self->getPreserveDofNames(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.def("setDofName", [](dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index, const std::string & name, bool preserveName) -> const std::string & { return self->setDofName(index, name, preserveName); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index"), ::boost::python::arg("name"), ::boost::python::arg("preserveName")))
.def("getDofName", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self, std::size_t index) -> const std::string & { return self->getDofName(index); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >(), (::boost::python::arg("index")))
.def("getDofNames", [](const dart::dynamics::detail::MultiDofJointAddon<2> *self) -> const dart::dynamics::detail::MultiDofJointAddon<2>::StringArray & { return self->getDofNames(); }, ::boost::python::return_value_policy<boost::python::copy_const_reference >())
.add_static_property("NumDofs", ::boost::python::make_getter(dart::dynamics::detail::MultiDofJointAddon<2>::NumDofs))
;
}

/* footer */
